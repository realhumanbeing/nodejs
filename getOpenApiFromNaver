const https = require('https');
var http = require('http');
//★Express기본 모듈 불러오기
var express = require('express')
    , path = require('path');

//익스프레스 객체 생성
var app = express();
var url = require('url');

//★라우터 객체 참조
var router = express.Router();

var static = require('serve-static');

//★public폴더 내 search.html 을 웹 서버의 루트패스로 접근할 수 있게 해줍니다
app.use( static(path.join(__dirname, 'public')));

var querystring = require('querystring');
var parseString = require('xml2js').parseString;


var client_id = 'MNXhIIYxx623Zs5N1BMJ';
var client_secret = 'ePR6cC8reB';

//★app -> router로 변경해서 "http://localhost:9000/openapi 루트로 호출할 수 있어요!
router.get('/openapi', function (req, res) {

    // 가이드대로 options설정을 하면 좀처럼 안먹어서.. ㅠ 아예 이어붙였습니당.
   var api_url = 'https://openapi.naver.com/v1/search/encyc.xml?query=' + encodeURI(req.query.search); // json 결과

   
   var request = require('request');
   var options = {
       url: api_url,
       headers: {'X-Naver-Client-Id':client_id, 'X-Naver-Client-Secret': client_secret}
    };
    
   //★ 이 부분은 가이드에서는 콜백함수의 req를 받아서  req = https.get(~~ 이렇게 되어있는데, 그렇게 하면 좀처럼 호출이 안되더라구요 ㅠ
   // 그래서 이 부분은 request를 새로 모듈불러와서 get통신 시켰어용
   request.get(options, function (error, response, body) {
         
       if (!error && response.statusCode == 200) {
           res.writeHead(200, {'Content-Type': 'text/json;charset=utf-8'});
           res.end(body);
           console.log(body); 
         } else {
           res.status(response.statusCode).end();
           console.log('error = ' + response.statusCode);
         }
   });
 });

////라우터 객체를 app객체에 등록 ★이 부분도 router.get부분을 app객체에 등록해주는 부분이라 중요합니다!
app.use('/', router);

//★ 서버 기동 후 대기하고 있어야 함 >> 이 부분을 대기시켜놓고 있지않으니까 주소창에 호출해도 안먹더라구요! 중요한 부분이었어요 ㅋㅋ
app.listen(9000, function () {
   console.log('대기중');
});
